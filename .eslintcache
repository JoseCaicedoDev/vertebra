[{"/mnt/c/Users/josec/Documents/programacionBasica/JS/react/vertebra/src/index.js":"1","/mnt/c/Users/josec/Documents/programacionBasica/JS/react/vertebra/src/components/App.js":"2","/mnt/c/Users/josec/Documents/programacionBasica/JS/react/vertebra/src/pages/Home.js":"3","/mnt/c/Users/josec/Documents/programacionBasica/JS/react/vertebra/src/pages/Begins.js":"4","/mnt/c/Users/josec/Documents/programacionBasica/JS/react/vertebra/src/components/layout/Front.js":"5","/mnt/c/Users/josec/Documents/programacionBasica/JS/react/vertebra/src/components/layout/Back.js":"6","/mnt/c/Users/josec/Documents/programacionBasica/JS/react/vertebra/src/pages/Products.js":"7","/mnt/c/Users/josec/Documents/programacionBasica/JS/react/vertebra/src/pages/Stores.js":"8","/mnt/c/Users/josec/Documents/programacionBasica/JS/react/vertebra/src/pages/Suppliers.js":"9","/mnt/c/Users/josec/Documents/programacionBasica/JS/react/vertebra/src/components/Header.js":"10","/mnt/c/Users/josec/Documents/programacionBasica/JS/react/vertebra/src/components/Navbar.js":"11"},{"size":241,"mtime":1607279187767,"results":"12","hashOfConfig":"13"},{"size":1123,"mtime":1607315162561,"results":"14","hashOfConfig":"13"},{"size":700,"mtime":1607283307871,"results":"15","hashOfConfig":"13"},{"size":517,"mtime":1607284384979,"results":"16","hashOfConfig":"13"},{"size":167,"mtime":1607265486818,"results":"17","hashOfConfig":"13"},{"size":283,"mtime":1607294335349,"results":"18","hashOfConfig":"13"},{"size":8446,"mtime":1607320218332,"results":"19","hashOfConfig":"13"},{"size":8538,"mtime":1607348118754,"results":"20","hashOfConfig":"13"},{"size":8492,"mtime":1607348155132,"results":"21","hashOfConfig":"13"},{"size":827,"mtime":1607278139481,"results":"22","hashOfConfig":"13"},{"size":1505,"mtime":1607283241022,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1oqr18v",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/josec/Documents/programacionBasica/JS/react/vertebra/src/index.js",[],["50","51"],"/mnt/c/Users/josec/Documents/programacionBasica/JS/react/vertebra/src/components/App.js",[],"/mnt/c/Users/josec/Documents/programacionBasica/JS/react/vertebra/src/pages/Home.js",[],"/mnt/c/Users/josec/Documents/programacionBasica/JS/react/vertebra/src/pages/Begins.js",[],"/mnt/c/Users/josec/Documents/programacionBasica/JS/react/vertebra/src/components/layout/Front.js",[],"/mnt/c/Users/josec/Documents/programacionBasica/JS/react/vertebra/src/components/layout/Back.js",[],"/mnt/c/Users/josec/Documents/programacionBasica/JS/react/vertebra/src/pages/Products.js",["52","53"],"import React from 'react'\r\n//import { Modal, ModalBody, ModalHeader,FormGroup, ModalFooter } from 'reactstrap'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nconst data = [\r\n  { sku: 1452, nombre: \"Naruto\", descripcion: \"Naruto\", unidad:\"Carrera 3 # 18- 45\" },\r\n  { sku: 2654, nombre: \"Goku\", descripcion: \"Dragon Ball\", unidad:\"Carrera 7 # 84- 72\" },\r\n  { sku: 3547, nombre: \"Kenshin Himura\", descripcion: \"Rurouni Kenshin\", unidad:\"Calle 4 No. 5 – 10\" },\r\n  { sku: 4548, nombre: \"Monkey D. Luffy\", descripcion: \"One Piece\", unidad:\"Calle 11 No. 4 - 14\" },\r\n  { sku: 5455, nombre: \"Edward Elric\", descripcion: \"Fullmetal Alchemist\", unidad:\"Calle 48b sur No. 21-13\"},\r\n  { sku: 6545, nombre: \"Seto Kaiba\", descripcion: \"Yu-Gi-Oh!\", unidad:\"Calle 11 No. 4-21 / 93\" },\r\n];\r\n\r\nclass Products extends React.Component {\r\n  //creacion de estado\r\n  state={\r\n    data:data,\r\n    modalInsertar: false,\r\n    form: {\r\n      sku: \"\",\r\n      nombre: \"\",\r\n      descripcion: \"\",\r\n      unidad: \"\",\r\n    }\r\n  }\r\n\r\n  mostrarModalActualizar = (elemento) => {\r\n    this.setState({\r\n      form: elemento,\r\n      modalActualizar: true,\r\n    });\r\n  };\r\n\r\n  cerrarModalActualizar = () => {\r\n    this.setState({ modalActualizar: false });\r\n  };\r\n\r\n  mostrarModalInsertar = () => {\r\n    this.setState({\r\n      modalInsertar: true,\r\n    });\r\n  };\r\n  cerrarModalInsertar = () => {\r\n    this.setState({ modalInsertar: false });\r\n  };\r\n\r\n  editar = (elemento) => {\r\n    var contador = 0;\r\n    var arreglo = this.state.data;\r\n    arreglo.map((registro) => {\r\n      if (elemento.sku === registro.sku) {\r\n        arreglo[contador].nombre = elemento.nombre;\r\n        arreglo[contador].descripcion = elemento.descripcion;\r\n        arreglo[contador].unidad = elemento.unidad;\r\n      }\r\n      contador++;\r\n    });\r\n    this.setState({ data: arreglo, modalActualizar: false });\r\n  };\r\n\r\n    eliminar = (elemento) => {\r\n    var opcion = window.confirm(\"Estás Seguro que deseas Eliminar el elemento \"+elemento.sku);\r\n    if (opcion === true) {\r\n      var contador = 0;\r\n      var arreglo = this.state.data;\r\n      arreglo.map((registro) => {\r\n        if (elemento.sku === registro.sku) {\r\n          arreglo.splice(contador, 1);\r\n        }\r\n        contador++;\r\n      });\r\n      this.setState({ data: arreglo, modalActualizar: false });\r\n    }\r\n  };\r\n\r\n  insertar= ()=>{\r\n    var valorNuevo= {...this.state.form};\r\n    valorNuevo.sku=this.state.data.length+1;\r\n    var lista= this.state.data;\r\n    lista.push(valorNuevo);\r\n    this.setState({ modalInsertar: false, data: lista });\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      form: {\r\n        ...this.state.form,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n    <div>\r\n\r\n        <Modal show={this.state.modalInsertar}>\r\n          <Modal.Header>\r\n           <div><h3>Insertar Productos</h3></div>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Form.Group>\r\n              <label>\r\n                Sku: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"sku\"\r\n                type=\"number\"\r\n                defaultValue\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            \r\n            <Form.Group>\r\n              <label>\r\n                Nombre: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"nombre\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            \r\n            <Form.Group>\r\n              <label>\r\n                Descripción: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"descripcion\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <label>\r\n                Unidad de medida: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"unidad\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => this.insertar()}\r\n            >\r\n              Insertar\r\n            </Button>\r\n            <Button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => this.cerrarModalInsertar()}\r\n            >\r\n              Cancelar\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal show={this.state.modalActualizar}>\r\n          <Modal.Header>\r\n           <div><h3>Editar Productos</h3></div>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Form.Group>\r\n              <label>\r\n               Sku:\r\n              </label>\r\n            \r\n              <input\r\n                className=\"form-control\"\r\n                type=\"number\"\r\n                value={this.state.form.sku}\r\n              />\r\n            </Form.Group>\r\n            \r\n            <Form.Group>\r\n              <label>\r\n                Nombre: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"nombre\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n                value={this.state.form.nombre}\r\n              />\r\n            </Form.Group>\r\n            \r\n            <Form.Group>\r\n              <label>\r\n                Descripción: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"descripcion\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n                value={this.state.form.descripcion}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <label>\r\n                Unidad de medida: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"unidad\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n                value={this.state.form.unidad}\r\n              />\r\n            </Form.Group>\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={() => this.editar(this.state.form)}\r\n            >\r\n              Editar\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => this.cerrarModalActualizar()}\r\n            >\r\n              Cancelar\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n\r\n\r\n      <div className='container-flunit'>\r\n        <div className='row'>\r\n          <main className='col-md-10 ml-sm-auto col-lg-10 pt-3 px-4s'>\r\n            <div className='px-5 d-flex justify-content-between'>\r\n              <h1>Productos</h1>\r\n              <div>\r\n                <Button variant=\"success\" onClick={()=>this.mostrarModalInsertar()}>Agregar</Button>\r\n              </div>\r\n            </div>\r\n            {/* table-responsive */}\r\n            <table className=\"container table table-hover\">\r\n              <thead>\r\n                <tr className=\"table-success\">\r\n                  <th scope=\"col\">Sku</th>\r\n                  <th scope=\"col\">Nombre</th>\r\n                  <th scope=\"col\">Descripción</th>\r\n                  <th scope=\"col\">Unidad de medida</th>\r\n                  <th scope=\"col\">Acciones</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.data.map((elemento) =>(\r\n                  <tr>\r\n                    <th scope=\"row\">{elemento.sku}</th>\r\n                    <td>{elemento.nombre}</td>\r\n                    <td>{elemento.descripcion}</td>\r\n                    <td>{elemento.unidad}</td>\r\n                    <td><Button variant=\"primary\" onClick={()=> this.mostrarModalActualizar(elemento)}>Editar</Button> <Button variant=\"danger\" onClick={()=> this.eliminar(elemento)}>Eliminar</Button></td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Products\r\n","/mnt/c/Users/josec/Documents/programacionBasica/JS/react/vertebra/src/pages/Stores.js",["54","55"],"import React from 'react'\r\n//import { Modal, ModalBody, ModalHeader,FormGroup, ModalFooter } from 'reactstrap'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nconst data = [\r\n  { manager: \"Naruto\", nombre: \"Naruto\", Servicios: \"Naruto\", direccion:\"Carrera 3 # 18- 45\" },\r\n  { manager: \"Goku\", nombre: \"Goku\", Servicios: \"Dragon Ball\", direccion:\"Carrera 7 # 84- 72\" },\r\n  { manager: \"Kenshin Himura\", nombre: \"Kenshin Himura\", Servicios: \"Rurouni Kenshin\", direccion:\"Calle 4 No. 5 – 10\" },\r\n  { manager: \"Monkey D. Luffy\", nombre: \"Monkey D. Luffy\", Servicios: \"One Piece\", direccion:\"Calle 11 No. 4 - 14\" },\r\n  { manager: \"Edward Elric\", nombre: \"Edward Elric\", Servicios: \"Fullmetal Alchemist\", direccion:\"Calle 48b sur No. 21-13\"},\r\n  { manager: \"Seto Kaiba\", nombre: \"Seto Kaiba\", Servicios: \"Yu-Gi-Oh!\", direccion:\"Calle 11 No. 4-21 / 93\" },\r\n];\r\n\r\nclass Stores extends React.Component {\r\n  //creacion de estado\r\n  state={\r\n    data:data,\r\n    modalInsertar: false,\r\n    form: {\r\n      manager: \"\",\r\n      nombre: \"\",\r\n      Servicios: \"\",\r\n      direccion: \"\",\r\n    }\r\n  }\r\n\r\n  mostrarModalActualizar = (elemento) => {\r\n    this.setState({\r\n      form: elemento,\r\n      modalActualizar: true,\r\n    });\r\n  };\r\n\r\n  cerrarModalActualizar = () => {\r\n    this.setState({ modalActualizar: false });\r\n  };\r\n\r\n  mostrarModalInsertar = () => {\r\n    this.setState({\r\n      modalInsertar: true,\r\n    });\r\n  };\r\n  cerrarModalInsertar = () => {\r\n    this.setState({ modalInsertar: false });\r\n  };\r\n\r\n  editar = (elemento) => {\r\n    var contador = 0;\r\n    var arreglo = this.state.data;\r\n    arreglo.map((registro) => {\r\n      if (elemento.manager === registro.manager) {\r\n        arreglo[contador].nombre = elemento.nombre;\r\n        arreglo[contador].Servicios = elemento.Servicios;\r\n        arreglo[contador].direccion = elemento.direccion;\r\n      }\r\n      contador++;\r\n    });\r\n    this.setState({ data: arreglo, modalActualizar: false });\r\n  };\r\n\r\n    eliminar = (elemento) => {\r\n    var opcion = window.confirm(\"Estás Seguro que deseas Eliminar el elemento \"+elemento.manager);\r\n    if (opcion === true) {\r\n      var contador = 0;\r\n      var arreglo = this.state.data;\r\n      arreglo.map((registro) => {\r\n        if (elemento.manager === registro.manager) {\r\n          arreglo.splice(contador, 1);\r\n        }\r\n        contador++;\r\n      });\r\n      this.setState({ data: arreglo, modalActualizar: false });\r\n    }\r\n  };\r\n\r\n  insertar= ()=>{\r\n    var valorNuevo= {...this.state.form};\r\n    valorNuevo.manager=this.state.data.length+1;\r\n    var lista= this.state.data;\r\n    lista.push(valorNuevo);\r\n    this.setState({ modalInsertar: false, data: lista });\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      form: {\r\n        ...this.state.form,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n    <div>\r\n\r\n        <Modal show={this.state.modalInsertar}>\r\n          <Modal.Header>\r\n           <div><h3>Insertar Productos</h3></div>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Form.Group>\r\n              <label>\r\n                Manager: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"manager\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            \r\n            <Form.Group>\r\n              <label>\r\n                Nombre: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"nombre\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            \r\n            <Form.Group>\r\n              <label>\r\n                Servicios extras: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"Servicios\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <label>\r\n                Dirección: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"direccion\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => this.insertar()}\r\n            >\r\n              Insertar\r\n            </Button>\r\n            <Button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => this.cerrarModalInsertar()}\r\n            >\r\n              Cancelar\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal show={this.state.modalActualizar}>\r\n          <Modal.Header>\r\n           <div><h3>Editar Productos</h3></div>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Form.Group>\r\n              <label>\r\n               Manager:\r\n              </label>\r\n            \r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                value={this.state.form.manager}\r\n              />\r\n            </Form.Group>\r\n            \r\n            <Form.Group>\r\n              <label>\r\n                Nombre: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"nombre\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n                value={this.state.form.nombre}\r\n              />\r\n            </Form.Group>\r\n            \r\n            <Form.Group>\r\n              <label>\r\n                Servicios extras: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"Servicios\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n                value={this.state.form.Servicios}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <label>\r\n                Dirección: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"direccion\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n                value={this.state.form.direccion}\r\n              />\r\n            </Form.Group>\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={() => this.editar(this.state.form)}\r\n            >\r\n              Editar\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => this.cerrarModalActualizar()}\r\n            >\r\n              Cancelar\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n\r\n\r\n      <div className='container-flunit'>\r\n        <div className='row'>\r\n          <main className='col-md-10 ml-sm-auto col-lg-10 pt-3 px-4s'>\r\n            <div className='px-5 d-flex justify-content-between'>\r\n              <h1>Tiendas</h1>\r\n              <div>\r\n                <Button variant=\"success\" onClick={()=>this.mostrarModalInsertar()}>Agregar</Button>\r\n              </div>\r\n            </div>\r\n            {/* table-responsive */}\r\n            <table className=\"container table table-hover\">\r\n              <thead>\r\n                <tr className=\"table-success\">\r\n                  <th scope=\"col\">Manager</th>\r\n                  <th scope=\"col\">Nombre</th>\r\n                  <th scope=\"col\">Servicios extras</th>\r\n                  <th scope=\"col\">Dirección</th>\r\n                  <th scope=\"col\">Acciones</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.data.map((elemento) =>(\r\n                  <tr>\r\n                    <th scope=\"row\">{elemento.manager}</th>\r\n                    <td>{elemento.nombre}</td>\r\n                    <td>{elemento.Servicios}</td>\r\n                    <td>{elemento.direccion}</td>\r\n                    <td><Button variant=\"primary\" onClick={()=> this.mostrarModalActualizar(elemento)}>Editar</Button> <Button variant=\"danger\" onClick={()=> this.eliminar(elemento)}>Eliminar</Button></td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Stores\r\n","/mnt/c/Users/josec/Documents/programacionBasica/JS/react/vertebra/src/pages/Suppliers.js",["56","57"],"import React from 'react'\r\n//import { Modal, ModalBody, ModalHeader,FormGroup, ModalFooter } from 'reactstrap'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nconst data = [\r\n  { nit: 1452, nombre: \"Naruto\", representante: \"Naruto\", direccion:\"Carrera 3 # 18- 45\" },\r\n  { nit: 2654, nombre: \"Goku\", representante: \"Dragon Ball\", direccion:\"Carrera 7 # 84- 72\" },\r\n  { nit: 3547, nombre: \"Kenshin Himura\", representante: \"Rurouni Kenshin\", direccion:\"Calle 4 No. 5 – 10\" },\r\n  { nit: 4548, nombre: \"Monkey D. Luffy\", representante: \"One Piece\", direccion:\"Calle 11 No. 4 - 14\" },\r\n  { nit: 5455, nombre: \"Edward Elric\", representante: \"Fullmetal Alchemist\", direccion:\"Calle 48b sur No. 21-13\"},\r\n  { nit: 6545, nombre: \"Seto Kaiba\", representante: \"Yu-Gi-Oh!\", direccion:\"Calle 11 No. 4-21 / 93\" },\r\n];\r\n\r\nclass Suppliers extends React.Component {\r\n  //creacion de estado\r\n  state={\r\n    data:data,\r\n    modalInsertar: false,\r\n    form: {\r\n      nit: \"\",\r\n      nombre: \"\",\r\n      representante: \"\",\r\n      direccion: \"\",\r\n    }\r\n  }\r\n\r\n  mostrarModalActualizar = (elemento) => {\r\n    this.setState({\r\n      form: elemento,\r\n      modalActualizar: true,\r\n    });\r\n  };\r\n\r\n  cerrarModalActualizar = () => {\r\n    this.setState({ modalActualizar: false });\r\n  };\r\n\r\n  mostrarModalInsertar = () => {\r\n    this.setState({\r\n      modalInsertar: true,\r\n    });\r\n  };\r\n  cerrarModalInsertar = () => {\r\n    this.setState({ modalInsertar: false });\r\n  };\r\n\r\n  editar = (elemento) => {\r\n    var contador = 0;\r\n    var arreglo = this.state.data;\r\n    arreglo.map((registro) => {\r\n      if (elemento.nit === registro.nit) {\r\n        arreglo[contador].nombre = elemento.nombre;\r\n        arreglo[contador].representante = elemento.representante;\r\n        arreglo[contador].direccion = elemento.direccion;\r\n      }\r\n      contador++;\r\n    });\r\n    this.setState({ data: arreglo, modalActualizar: false });\r\n  };\r\n\r\n    eliminar = (elemento) => {\r\n    var opcion = window.confirm(\"Estás Seguro que deseas Eliminar el elemento \"+elemento.nit);\r\n    if (opcion === true) {\r\n      var contador = 0;\r\n      var arreglo = this.state.data;\r\n      arreglo.map((registro) => {\r\n        if (elemento.nit === registro.nit) {\r\n          arreglo.splice(contador, 1);\r\n        }\r\n        contador++;\r\n      });\r\n      this.setState({ data: arreglo, modalActualizar: false });\r\n    }\r\n  };\r\n\r\n  insertar= ()=>{\r\n    var valorNuevo= {...this.state.form};\r\n    valorNuevo.nit=this.state.data.length+1;\r\n    var lista= this.state.data;\r\n    lista.push(valorNuevo);\r\n    this.setState({ modalInsertar: false, data: lista });\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      form: {\r\n        ...this.state.form,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n    <div>\r\n\r\n        <Modal show={this.state.modalInsertar}>\r\n          <Modal.Header>\r\n           <div><h3>Insertar Proveedores</h3></div>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Form.Group>\r\n              <label>\r\n                Nit: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"nit\"\r\n                type=\"number\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            \r\n            <Form.Group>\r\n              <label>\r\n                nombre: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"nombre\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            \r\n            <Form.Group>\r\n              <label>\r\n                Represéntate legal: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"representante\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <label>\r\n                Dirección: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"direccion\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => this.insertar()}\r\n            >\r\n              Insertar\r\n            </Button>\r\n            <Button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => this.cerrarModalInsertar()}\r\n            >\r\n              Cancelar\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal show={this.state.modalActualizar}>\r\n          <Modal.Header>\r\n           <div><h3>Editar Proveedores</h3></div>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Form.Group>\r\n              <label>\r\n               Nit:\r\n              </label>\r\n            \r\n              <input\r\n                className=\"form-control\"\r\n                type=\"number\"\r\n                value={this.state.form.nit}\r\n              />\r\n            </Form.Group>\r\n            \r\n            <Form.Group>\r\n              <label>\r\n                nombre: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"nombre\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n                value={this.state.form.nombre}\r\n              />\r\n            </Form.Group>\r\n            \r\n            <Form.Group>\r\n              <label>\r\n                Represéntate legal: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"representante\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n                value={this.state.form.representante}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <label>\r\n                Dirección: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"direccion\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n                value={this.state.form.direccion}\r\n              />\r\n            </Form.Group>\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={() => this.editar(this.state.form)}\r\n            >\r\n              Editar\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => this.cerrarModalActualizar()}\r\n            >\r\n              Cancelar\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n\r\n\r\n      <div className='container-flunit'>\r\n        <div className='row'>\r\n          <main className='col-md-10 ml-sm-auto col-lg-10 pt-3 px-4s'>\r\n            <div className='px-5 d-flex justify-content-between'>\r\n              <h1>Proveedores</h1>\r\n              <div>\r\n                <Button variant=\"success\" onClick={()=>this.mostrarModalInsertar()}>Agregar</Button>\r\n              </div>\r\n            </div>\r\n            {/* table-responsive */}\r\n            <table className=\"container table table-hover\">\r\n              <thead>\r\n                <tr className=\"table-success\">\r\n                  <th scope=\"col\">Nit</th>\r\n                  <th scope=\"col\">Nombre</th>\r\n                  <th scope=\"col\">Represéntate legal</th>\r\n                  <th scope=\"col\">dirección</th>\r\n                  <th scope=\"col\">Acciones</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.data.map((elemento) =>(\r\n                  <tr>\r\n                    <th scope=\"row\">{elemento.nit}</th>\r\n                    <td>{elemento.nombre}</td>\r\n                    <td>{elemento.representante}</td>\r\n                    <td>{elemento.direccion}</td>\r\n                    <td><Button variant=\"primary\" onClick={()=> this.mostrarModalActualizar(elemento)}>Editar</Button> <Button variant=\"danger\" onClick={()=> this.eliminar(elemento)}>Eliminar</Button></td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Suppliers\r\n","/mnt/c/Users/josec/Documents/programacionBasica/JS/react/vertebra/src/components/Header.js",[],"/mnt/c/Users/josec/Documents/programacionBasica/JS/react/vertebra/src/components/Navbar.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":52,"column":28,"nodeType":"64","messageId":"65","endLine":52,"endColumn":30},{"ruleId":"62","severity":1,"message":"63","line":68,"column":30,"nodeType":"64","messageId":"65","endLine":68,"endColumn":32},{"ruleId":"62","severity":1,"message":"63","line":52,"column":28,"nodeType":"64","messageId":"65","endLine":52,"endColumn":30},{"ruleId":"62","severity":1,"message":"63","line":68,"column":30,"nodeType":"64","messageId":"65","endLine":68,"endColumn":32},{"ruleId":"62","severity":1,"message":"63","line":52,"column":28,"nodeType":"64","messageId":"65","endLine":52,"endColumn":30},{"ruleId":"62","severity":1,"message":"63","line":68,"column":30,"nodeType":"64","messageId":"65","endLine":68,"endColumn":32},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]